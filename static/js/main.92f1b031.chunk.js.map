{"version":3,"sources":["babypics.js","components/NamesList.js","components/Favorites.js","components/Messages.js","components/AddName.js","components/ConfirmDelete.js","components/Navbar.js","components/Drawer.js","components/Loading.js","index.js"],"names":["babypics","useStyles","makeStyles","theme","root","textAlign","list","width","margin","breakpoints","down","listItem","border","backgroundColor","palette","primary","light","NamesList","handleClick","handleButton","handleChecked","nameList","classes","currentURL","url0","className","Typography","variant","style","marginTop","List","sort","a","b","name","localeCompare","map","ListItem","key","surname","length","Math","random","ListItemAvatar","Avatar","alt","floor","src","ListItemText","ListItemSecondaryAction","onClick","id","IconButton","edge","color","Button","size","Favorites","handleClickOpen","favNames","close","padding","spacing","Messages","popMessage","setPopMessage","message","msgGood","handleClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","ContentProps","action","aria-label","AddName","handleNameClose","addNameOpen","Dialog","aria-labelledby","aria-describedby","DialogTitle","DialogContent","TextField","label","DialogActions","document","getElementById","value","autoFocus","ConfirmDelete","handleDelete","currentId","DialogContentText","flexGrow","menuButton","marginRight","title","Navbar","toggleDrawer","handleAddName","AppBar","position","Toolbar","Tooltip","component","NavLink","to","textDecoration","Drawer","side","drawerSide","SwipeableDrawer","left","onOpen","role","onKeyDown","gutterBottom","display","Divider","button","Loading","CircularProgress","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","namelist","database","ref","currentData","App","useState","setNameList","setFavNames","setMessage","setMsgGood","setOpen","setAddNameOpen","setCurrentId","getNames","async","fetch","response","json","window","scrollTo","alert","fetchData","useEffect","on","data","val","error","console","log","newName","currentTarget","filter","favname","String","newList","set","setDrawerSide","type","CssBaseline","path","tempList","favName","ReactDOM","render"],"mappings":"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","file":"static/js/main.92f1b031.chunk.js","sourcesContent":["export const babypics = [\r\n    \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/meaningful-baby-boy-names-lead-1551415072.jpg?crop=0.669xw:1.00xh;0.137xw,0&resize=640:*\",\r\n    \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/cute-portrait-of-toddler-baby-boy-in-sunny-roomm-royalty-free-image-932825718-1544565020.jpg\",\r\n    \"https://images-na.ssl-images-amazon.com/images/I/61rBLjzUBXL._SY550_.jpg\",\r\n    \"https://images-na.ssl-images-amazon.com/images/I/41E-piOipFL.jpg\",\r\n    \"https://i.ebayimg.com/images/g/IZUAAOSw4UtWTsxz/s-l400.jpg\",\r\n]","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Button,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemSecondaryAction,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport { babypics } from \"../babypics\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  list: {\r\n    width: \"50%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"95%\"\r\n    }\r\n  },\r\n  listItem: {\r\n    border: \"1px solid black\",\r\n    margin: \"5px 0\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.light\r\n    }\r\n  }\r\n}));\r\n\r\nconst NamesList = ({ handleClick, handleButton, handleChecked, nameList, currentURL, url0 }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h6\" style={{ marginTop: 15 }}>\r\n        Random Names\r\n      </Typography>\r\n      <List className={classes.list}>\r\n        {nameList\r\n          ? nameList\r\n              .sort((a, b) => a.name ? a.name.localeCompare(b.name) : a.localeCompare(b))\r\n              .map(name => (\r\n                <ListItem\r\n                  key={(name.surname ? name.surname.length : name.length) * Math.random(55)}\r\n                  className={classes.listItem}\r\n                >\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      alt={babypics[Math.floor(Math.random() * 4)]}\r\n                      src={babypics[Math.floor(Math.random() * 4)]}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={name.name ? name.name + \" Corbeil\" : name + \" Corbeil\"} />\r\n                  <ListItemSecondaryAction onClick={handleClick} id={name.name ? name.name : name}>\r\n                    <IconButton edge=\"end\" color=\"primary\">\r\n                      {handleChecked(name.name ? name.name : name) ? (\r\n                        <FavoriteIcon />\r\n                      ) : (\r\n                        <FavoriteBorderIcon />\r\n                      )}\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              ))\r\n          : null}\r\n      </List>\r\n      <Button\r\n        variant=\"contained\"\r\n        size=\"large\"\r\n        color=\"primary\"\r\n        onClick={handleButton}\r\n        style={{ width: \"95%\", margin: 10 }}\r\n      >\r\n        {nameList.length > 0 ? \"NEXT PAGE\" : \"GENERATE NAMES\"}\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nexport default NamesList;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemSecondaryAction,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport { babypics } from \"../babypics\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    textAlign: \"center\"\r\n  },\r\n  list: {\r\n    width: \"50%\",\r\n    margin: \"auto\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"95%\"\r\n    }\r\n  },\r\n  listItem: {\r\n    border: \"1px solid black\",\r\n    margin: \"5px 0\",\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.primary.light\r\n    }\r\n  }\r\n}));\r\n\r\nconst Favorites = ({ handleClickOpen, favNames, }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h6\" style={{ marginTop: 15 }}>\r\n        Favorites\r\n      </Typography>\r\n      <List className={classes.list}>\r\n        {favNames\r\n          ? favNames\r\n              .sort((a, b) => a.name.localeCompare(b.name))\r\n              .map(name => (\r\n                <ListItem key={name.name} className={classes.listItem}>\r\n                  <ListItemAvatar>\r\n                    <Avatar\r\n                      alt={babypics[Math.floor(Math.random() * 4)]}\r\n                      src={babypics[Math.floor(Math.random() * 4)]}\r\n                    />\r\n                  </ListItemAvatar>\r\n                  <ListItemText primary={name.name + \" Corbeil\"} />\r\n                  <ListItemSecondaryAction\r\n                    onClick={handleClickOpen}\r\n                    id={name.name}\r\n                  >\r\n                    <IconButton edge=\"end\" color=\"secondary\">\r\n                      <HighlightOffIcon />\r\n                    </IconButton>\r\n                  </ListItemSecondaryAction>\r\n                </ListItem>\r\n              ))\r\n          : null}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  close: {\r\n    padding: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\nexport default function Messages({\r\n  popMessage,\r\n  setPopMessage,\r\n  message,\r\n  msgGood\r\n}) {\r\n  const classes = useStyles();\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n    setPopMessage(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\"\r\n        }}\r\n        open={popMessage ? popMessage : false}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n        ContentProps={{\r\n          \"aria-describedby\": \"message-id\"\r\n        }}\r\n        message={<span id=\"message-id\">{message}</span>}\r\n        action={[\r\n          <IconButton\r\n            key=\"close\"\r\n            aria-label=\"close\"\r\n            className={classes.close}\r\n            onClick={handleClose}\r\n          >\r\n            {msgGood ? (\r\n              <DoneIcon style={{ color: \"green\" }} />\r\n            ) : (\r\n              <CloseIcon style={{ color: \"rgb(220, 0, 78)\" }} />\r\n            )}\r\n          </IconButton>\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField\r\n} from \"@material-ui/core\";\r\n\r\nexport default function AddName({ handleNameClose, addNameOpen, handleClick }) {\r\n  const handleAdd = () => {\r\n    let name = document.getElementById(\"manual-name\").value;\r\n    handleClick(null, name);\r\n    handleNameClose();\r\n  };\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={addNameOpen}\r\n        onClose={handleNameClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Add Baby Name\"}</DialogTitle>\r\n        <DialogContent>\r\n          <TextField id=\"manual-name\" label=\"Enter Name\" />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleNameClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleAdd} color=\"primary\" autoFocus>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function ConfirmDelete({\r\n  handleDelete,\r\n  handleClose,\r\n  open,\r\n  currentId\r\n}) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Confirm Delete\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Are you sure you want to delete {currentId}?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => handleDelete(currentId)}\r\n            color=\"primary\"\r\n            autoFocus\r\n          >\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChildFriendlyIcon from \"@material-ui/icons/ChildFriendly\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\n\r\nconst Navbar = ({ toggleDrawer, handleAddName }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Tooltip title=\"Menu\" aria-label=\"Menu\">\r\n            <IconButton\r\n              edge=\"start\"\r\n              className={classes.menuButton}\r\n              color=\"inherit\"\r\n              aria-label=\"menu\"\r\n              onClick={toggleDrawer(\"left\", true)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title} component={NavLink} to=\"/\" style={{textDecoration: \"none\"}}>\r\n            <ChildFriendlyIcon />\r\n            Baby Name Generator\r\n          </Typography>\r\n          <Tooltip title=\"Manual Add Name\" aria-label=\"Add Name\">\r\n            <IconButton color=\"inherit\" onClick={handleAddName}>\r\n              <AddCircleOutlineIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  makeStyles,\r\n  Typography,\r\n  SwipeableDrawer,\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar\r\n} from \"@material-ui/core\";\r\nimport CasinoIcon from \"@material-ui/icons/Casino\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    [theme.breakpoints.down(\"xs\")]: {}\r\n  },\r\n  title: {\r\n    margin: 5,\r\n    textAlign: \"center\"\r\n  }\r\n}));\r\n\r\nexport default function Drawer({ toggleDrawer, drawerSide }) {\r\n  const classes = useStyles();\r\n  const sideList = side => (\r\n    <div\r\n      style={{ width: 250 }}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n      onKeyDown={toggleDrawer(side, false)}\r\n    >\r\n      <span className={classes.title}>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Baby Name Generator\r\n        </Typography>\r\n        <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n          v1.0\r\n        </Typography>\r\n      </span>\r\n      <Divider />\r\n      <List>\r\n        <ListItem\r\n          button\r\n          component={NavLink}\r\n          to=\"/favorites\"\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <ListItemAvatar>\r\n            <ThumbUpIcon />\r\n          </ListItemAvatar>\r\n          <ListItemText primary={\"Favorites\"} />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          component={NavLink}\r\n          to=\"/\"\r\n          style={{ textDecoration: \"none\" }}\r\n        >\r\n          <ListItemAvatar>\r\n            <CasinoIcon />\r\n          </ListItemAvatar>\r\n          <ListItemText primary={\"Name Generator\"} />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <SwipeableDrawer\r\n        open={drawerSide.left}\r\n        onClose={toggleDrawer(\"left\", false)}\r\n        onOpen={toggleDrawer(\"left\", true)}\r\n      >\r\n        {sideList(\"left\")}\r\n      </SwipeableDrawer>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {CircularProgress, Typography} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    margin: \"15vh auto\",\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n\r\nexport default function Loading() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CircularProgress size={100} />\r\n      <Typography variant=\"h6\">Please wait...</Typography>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport ReactDOM from \"react-dom\";\nimport NamesList from \"./components/NamesList\";\nimport Favorites from \"./components/Favorites\";\nimport Messages from \"./components/Messages\";\nimport AddName from \"./components/AddName\";\nimport ConfirmDelete from \"./components/ConfirmDelete\";\nimport Navbar from \"./components/Navbar\";\nimport Drawer from \"./components/Drawer\";\nimport Loading from \"./components/Loading\";\nimport firebase from \"firebase/app\";\nimport \"firebase/database\";\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst favNamesDB = firebase.database();\nconst namelist = favNamesDB.ref(\"namelist/\");\nlet currentData = [];\n\nexport default function App() {\n  const [nameList, setNameList] = useState([]);\n  const [favNames, setFavNames] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [msgGood, setMsgGood] = useState(true);\n  const [popMessage, setPopMessage] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [addNameOpen, setAddNameOpen] = useState(false);\n  const [currentId, setCurrentId] = useState();\n\n  const regions = [\n    \"&region=australia\",\n    \"&region=england\",\n    \"&region=canada\",\n    \"&region=france\",\n    \"&region=ireland\",\n    \"&region=italy\",\n    \"&region=new zealand\",\n    \"&region=united states\"\n  ];\n\n  const url1 = 'https://namey.muffinlabs.com/name.json?count=50&type=male&frequency=all';\n\n  const [currentURL, setCurrentURL] = useState(url1);\n\n  function ScrollToTopOnMount() {\n    window.scrollTo(0, 0);\n  }\n\n  const selectNameList = () => {\n    getNames();\n  }\n  const getNames = () => {\n    async function fetchData() {\n      try {\n        const response = await fetch(currentURL);\n        const json = await response.json();\n        await setNameList(json);\n        ScrollToTopOnMount();\n      } catch (e) {\n        alert(\"Too Many Request Try Again Later\");\n      }\n    }\n    fetchData();\n  };\n\n  useEffect(() => {\n    const gotData = data => {\n      currentData = data.val();\n      currentData === null ? setFavNames([]) : setFavNames(currentData);\n    };\n    const errData = error => {\n      console.log(\"Error!\", error);\n    };\n    namelist.on(\"value\", gotData, errData);\n  }, []);\n\n  const handleClick = (event, name) => {\n    let id;\n    addNameOpen ? (id = name) : (id = event.currentTarget.id);\n    let newName = {\n      name: id\n    };\n    let findDup = favNames.filter(favname => favname.name === String(id));\n    if (findDup.length === 0) {\n      let newList = [...favNames, newName];\n      setFavNames(newList);\n      namelist.set(newList);\n      setMsgGood(true);\n      setMessage(id + \" added To Favorites!\");\n      setPopMessage(true);\n    } else {\n      setMsgGood(false);\n      setMessage(\"Duplicate Name\");\n      setPopMessage(true);\n    }\n  };\n\n  const handleButton = () => {\n    selectNameList();\n  };\n\n  const handleAddName = () => {\n    setAddNameOpen(true);\n  };\n\n  const handleClickOpen = event => {\n    let id = event.currentTarget.id;\n    setCurrentId(id);\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleNameClose = () => {\n    setAddNameOpen(false);\n  };\n\n  const handleDelete = id => {\n    let tempList = favNames.filter(name => {\n      if (name.name !== id) {\n        return name;\n      }\n      return null;\n    });\n    setFavNames(tempList);\n    namelist.set(tempList);\n    setMsgGood(false);\n    setMessage(id + \" Deleted!\");\n    setPopMessage(true);\n    setOpen(false);\n  };\n\n  const handleChecked = name => {\n    let tempList = favNames.filter(favName => favName.name === name);\n    let checked;\n    tempList.length > 0 ? (checked = true) : (checked = false);\n    if (checked) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  //Sidebar Handlers\n  const [drawerSide, setDrawerSide] = useState({\n    left: false\n  });\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n    setDrawerSide({ ...drawerSide, [side]: open });\n  };\n\n  return (\n    <CssBaseline>\n      <Router>\n        <Switch>\n          <Route path=\"/favorites\">\n            <Navbar toggleDrawer={toggleDrawer} handleAddName={handleAddName} />\n            <Drawer toggleDrawer={toggleDrawer} drawerSide={drawerSide} />\n            <Favorites favNames={favNames} handleClickOpen={handleClickOpen} />\n            <Messages\n              popMessage={popMessage}\n              setPopMessage={setPopMessage}\n              message={message}\n              msgGood={msgGood}\n            />\n            <AddName\n              handleAddName={handleAddName}\n              handleNameClose={handleNameClose}\n              addNameOpen={addNameOpen}\n              currentId={currentId}\n              handleClick={handleClick}\n            />\n            <ConfirmDelete\n              handleDelete={handleDelete}\n              handleClose={handleClose}\n              open={open}\n              currentId={currentId}\n            />\n          </Route>\n          <Route path=\"/loading\">\n            <Navbar toggleDrawer={toggleDrawer} handleAddName={handleAddName} />\n            <Drawer toggleDrawer={toggleDrawer} drawerSide={drawerSide} />\n            <Loading />\n          </Route>\n          <Route path=\"/\">\n            <Navbar toggleDrawer={toggleDrawer} handleAddName={handleAddName} />\n            <Drawer toggleDrawer={toggleDrawer} drawerSide={drawerSide} />\n            <NamesList\n              handleButton={handleButton}\n              handleClick={handleClick}\n              handleChecked={handleChecked}\n              nameList={nameList}\n              currentURL={currentURL}\n                          />\n            <AddName\n              handleAddName={handleAddName}\n              handleNameClose={handleNameClose}\n              addNameOpen={addNameOpen}\n              currentId={currentId}\n              handleClick={handleClick}\n            />\n            <Messages\n              popMessage={popMessage}\n              setPopMessage={setPopMessage}\n              message={message}\n              msgGood={msgGood}\n            />\n          </Route>\n        </Switch>\n      </Router>\n    </CssBaseline>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}